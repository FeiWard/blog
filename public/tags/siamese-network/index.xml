<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Siamese Network on Camel Shang</title>
    <link>/tags/siamese-network/</link>
    <description>Recent content in Siamese Network on Camel Shang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2017 Camel Shang</copyright>
    <lastBuildDate>Thu, 07 Dec 2017 14:24:40 +0800</lastBuildDate>
    
	<atom:link href="/tags/siamese-network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Siamese Notes</title>
      <link>/blog/siamese-notes/</link>
      <pubDate>Thu, 07 Dec 2017 14:24:40 +0800</pubDate>
      
      <guid>/blog/siamese-notes/</guid>
      <description>做法 通过样本相似度驱动权重共享的网络学习嵌入的隐变量表达(embedding vector representation)
siamese network Learning a Similarity Metric Discriminatively, with Application to Face Verofocation 假设对于正对 $ (X_1, X_2) $ 和负对$$(X_1, X_2^{&amp;lsquo;})$$
$$\exists m&amp;gt;0, E_W(X_1, X_2)+m&amp;lt;E_W(X-1,X_2^&amp;lsquo;).$$
损失函数
$$ L(W)=\sum_{i=1}^{P}\ell(W,(Y,X_1,X_2)^{i}) $$ $$ \ell(W,(Y,X_1,X_2)^{i} = (1-Y)\ell_G(E_W(X_1,X_2)^i) + Y\ell_I(E_W(X_1,X_2)^i) $$
Dimensionality Reduction by Learning an Invariant Mapping 对比损失函数(contrastive loss function)
$$ \ell(W,Y,X_1,X_2) = (1-Y){1\over2}(D_W)^2 + (Y){1\over2}{max(0,m-D_W)}^2 $$
triplet loss Learning fine-grained image similarity with deep ranking deep metreic learning using triplet network 假设: 对于选择的粗略相似度度量$r$, 我们希望学习到相似度函数表达 $S$</description>
    </item>
    
  </channel>
</rss>