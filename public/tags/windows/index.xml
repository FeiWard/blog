<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on BLOG</title>
    <link>/tags/windows/index.xml</link>
    <description>Recent content in Windows on BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2015 Nishanth Shanmugham</copyright>
    <atom:link href="/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>windows安装caffe并编译fast-rcnn-demo</title>
      <link>/blog/windows%E5%AE%89%E8%A3%85caffe%E5%B9%B6%E7%BC%96%E8%AF%91fast-rcnn-demo/</link>
      <pubDate>Thu, 01 Sep 2016 20:56:28 +0000</pubDate>
      
      <guid>/blog/windows%E5%AE%89%E8%A3%85caffe%E5%B9%B6%E7%BC%96%E8%AF%91fast-rcnn-demo/</guid>
      <description>

&lt;h1 id=&#34;microsoft-caffe&#34;&gt;microsoft caffe&lt;/h1&gt;

&lt;p&gt;首先在微软github主页下载&lt;a href=&#34;https://github.com/microsoft/caffe&#34;&gt;microsoft-caffe&lt;/a&gt;，官方的编译运行文档写得比较详细，按照步骤来利用VS编译一般没什么问题。一般常见的问题是&lt;code&gt;error C2220: 警告被视为错误&lt;/code&gt;，只需&lt;strong&gt;右键项目，属性，C/C++，Treat Warnings as Error设置为No&lt;/strong&gt;即可。附上个人的&lt;a href=&#34;http://7xt5lb.com2.z0.glb.clouddn.com/CommonSettings.props&#34;&gt;CommonSettings.props&lt;/a&gt;，仅供参考。&lt;/p&gt;

&lt;p&gt;所有项目编译成功之后，将&lt;code&gt;caffe_root\Build\x64\Release\pycaffe&lt;/code&gt;设置环境变量PythonPath。设置之后打开Python，若import caffe成功则表示编译成功。&lt;/p&gt;

&lt;h1 id=&#34;caffe-mnist-示例&#34;&gt;caffe mnist 示例&lt;/h1&gt;

&lt;p&gt;Windows下很多人用cygwin来模拟一些Linux操作，个人推荐使用&lt;a href=&#34;http://babun.github.io/&#34;&gt;Babun&lt;/a&gt;，一款优雅好用的Windows shell工具。&lt;/p&gt;

&lt;p&gt;按照caffe官网&lt;a href=&#34;http://caffe.berkeleyvision.org/gathered/examples/mnist.html&#34;&gt;mnist文档&lt;/a&gt;一步一步即可。&lt;/p&gt;

&lt;h3 id=&#34;下载数据集&#34;&gt;下载数据集&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;进入babun&lt;/li&gt;
&lt;li&gt;cd到caffe_root&lt;/li&gt;
&lt;li&gt;输入&lt;code&gt;./data/mnist/get_mnist.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;转化数据集为lmdb&#34;&gt;转化数据集为lmdb&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;./examples/mnist/create_mnist.sh&lt;/code&gt;, 第8行&lt;code&gt;BUILD=build/examples/mnist&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;BUILD=Build/x64/Release&lt;/code&gt;, 第17行和第19行&lt;code&gt;convert_mnist_data.bin&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;convert_mnist_data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;同样在Babun下，输入&lt;code&gt;./examples/mnist/create_mnist.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;训练lenet&#34;&gt;训练Lenet&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;./examples/mnist/train_lenet.sh&lt;/code&gt;, 第4行&lt;code&gt;./build/tools/caffe train &amp;ndash;solver=examples/mnist/lenet_solver.prototxt $@ &amp;ndash;&amp;gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; BUILD=Build/x64/Release
 $BUILD/caffe train --solver=examples/mnist/lenet_solver.prototxt $@
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在babun下，输入&lt;code&gt;./examples/mnist/train_lenet.sh&lt;/code&gt;，得到如下图结果，示例mnist成功跑通&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://7xt5lb.com2.z0.glb.clouddn.com/lenet_win.jpg&#34; alt=&#34;lenet_result&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;fast-rcnn-demo示例&#34;&gt;fast rcnn demo示例&lt;/h1&gt;

&lt;p&gt;上面这些步骤完成后，如果直接进入fastrcnn-root,运行&lt;code&gt;python ./tools/demo.py&lt;/code&gt;（&lt;strong&gt;注意：此时在cmd中运行即可，目前babun自带Python，但是好像不能调用系统自带的python&lt;/strong&gt;）会提示不存在ROIPooling，导致demo运行失败。进入caffe项目发现，roi_pooling_layer.cpp 以及 roi_pooling_layer.cu根本就没有编译。因此将 roi_pooling_layer.cpp 添加进 libcaffe-src 中，将 roi_pooling_layer.cu 添加进 libcaffe-cu 中，再重新编译即可。&lt;/p&gt;

&lt;p&gt;再次运行&lt;code&gt;python ./tools/demo.py&lt;/code&gt;得到结果如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xt5lb.com2.z0.glb.clouddn.com/fastrcnn_demo.jpg&#34; alt=&#34;demo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xt5lb.com2.z0.glb.clouddn.com/fastrcnn_demo_pic.png&#34; alt=&#34;demo_pic&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;后续&#34;&gt;后续&lt;/h1&gt;

&lt;p&gt;后续就是在fast rcnn上训练自己的数据了，Linux上已经跑通，Windows上有待测试。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>